name: ci pipeline

on:
  workflow_dispatch:

    inputs:

      suite:
        description: 'Suite'
        required: true
        default: 'bvt'
        type: choice
        options:
          - bvt
          - regression

      browser:
        description: 'Browser'
        required: true
        default: 'chromium'
        type: choice
        options: [ chromium, firefox, webkit ]

      user_type:
        description: 'User Type'
        required: true
        default: 'a'
        type: choice
        options: [ a, b, c ]

      environment:
        description: 'Environment'
        required: true
        default: 'prod'
        type: choice
        options: [ dev, stage, prod ]

      detailed_testing:
        description: 'Detailed Testing'
        required: true
        default: 'false'
        type: choice
        options: [ 'true', 'false' ]

      company_id:
        description: 'Enter company id for detailed testing'
        required: false
        default: '100'
        type: string

      number_of_companies:
        description: 'Number of Companies'
        required: true
        default: '5'
        type: choice
        options: [ '1','2','3','4','5' ]

      ui_pages:
        description: 'Number of Pages for UI Tests'
        required: true
        default: '1'
        type: choice
        options: [ '1','2','3' ]

      api_pages:
        description: 'Number of Pages for API Tests'
        required: true
        default: '1'
        type: choice
        options: [ '1','2','3' ]

permissions:
  contents: write

env:
  SHARD_COUNT: 2

jobs:
  tests:
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        shard: [ 0, 1 ]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest-shard

      - name: Set PYTHONPATH
        run: echo "PYTHONPATH=$(pwd)" >> $GITHUB_ENV

      - name: Set env from workflow_dispatch inputs
        if: github.event_name == 'workflow_dispatch'
        run: |
          echo "SUITE=${{ github.event.inputs.suite }}" >> $GITHUB_ENV
          echo "ENVIRONMENT=${{ github.event.inputs.environment }}" >> $GITHUB_ENV
          echo "BROWSER=${{ github.event.inputs.browser }}" >> $GITHUB_ENV
          echo "DETAILED_TESTING=${{ github.event.inputs.detailed_testing }}" >> $GITHUB_ENV
          echo "COMPANY_ID=${{ github.event.inputs.company_id }}" >> $GITHUB_ENV
          echo "NUMBER_OF_COMPANIES=${{ github.event.inputs.number_of_companies }}" >> $GITHUB_ENV
          echo "USER_TYPE=${{ github.event.inputs.user_type }}" >> $GITHUB_ENV
          echo "UI_PAGES=${{ github.event.inputs.ui_pages }}" >> $GITHUB_ENV
          echo "API_PAGES=${{ github.event.inputs.api_pages }}" >> $GITHUB_ENV

      - name: Clean old Allure results
        run: rm -rf features/reports/allure-results/*

      - name: Run Test Collection
        run: |
          echo "Suite: $SUITE"
          python -m pytest --collect-only -m "$SUITE"
        continue-on-error: true

      - name: Run Pytest Shard
        run: |
          ALLURE_DIR=features/reports/allure-results/${{ matrix.shard }}
          mkdir -p $ALLURE_DIR
          pytest -m "$SUITE and not no_shard" --alluredir=$ALLURE_DIR --num-shards=$SHARD_COUNT --shard-id=${{ matrix.shard }}
          if [ "$SUITE" = "regression" ] && [ "${{ matrix.shard }}" = "0" ]; then
            pytest -m "no_shard"
          fi

      - name: Upload Allure Shard
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: allure-results-${{ matrix.shard }}
          path: features/reports/allure-results/${{ matrix.shard }}/*
          retention-days: 7

  allure-report:
    runs-on: ubuntu-latest
    needs: [ tests ]
    if: always()
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download Allure Results
        uses: actions/download-artifact@v4
        with:
          pattern: allure-results-*
          merge-multiple: true
          path: features/reports/allure-results
        continue-on-error: true

      - name: Get Allure History
        uses: actions/checkout@v4
        with:
          ref: gh-pages
          path: gh-pages
          persist-credentials: true
        continue-on-error: true

      - name: Generate Allure Report
        uses: simple-elf/allure-report-action@master
        with:
          allure_results: features/reports/allure-results
          allure_history: gh-pages/allure-history
          keep_reports: 7

      - name: Pull latest gh-pages
        run: |
          git fetch origin gh-pages --
          git checkout gh-pages --
          git pull origin gh-pages

      - name: Deploy Allure report to GitHub Pages
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: gh-pages/allure-history
          force_orphan: false
          user_name: 'github-actions[bot]'
          user_email: 'github-actions[bot]@users.noreply.github.com'
