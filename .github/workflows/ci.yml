name: ci pipeline

on:
  workflow_dispatch:

    inputs:

      suite:
        description: 'Suite'
        required: true
        default: 'bvt'
        type: choice
        options:
          - bvt
          - regression

      browser:
        description: 'Browser'
        required: true
        default: 'chromium'
        type: choice
        options: [ chromium, firefox, webkit ]

      user_type:
        description: 'User Type'
        required: true
        default: 'a'
        type: choice
        options: [ a, b, c ]

      environment:
        description: 'Environment'
        required: true
        default: 'prod'
        type: choice
        options: [ dev, stage, prod ]

      detailed_testing:
        description: 'Detailed Testing'
        required: true
        default: 'false'
        type: choice
        options: [ 'true', 'false' ]

      company_id:
        description: 'Enter company id for detailed testing'
        required: false
        default: '100'
        type: string

      number_of_companies:
        description: 'Number of Companies'
        required: true
        default: '5'
        type: choice
        options: [ '1','2','3','4','5' ]

      ui_pages:
        description: 'Number of Pages for UI Tests'
        required: true
        default: '1'
        type: choice
        options: [ '1','2','3' ]

      api_pages:
        description: 'Number of Pages for API Tests'
        required: true
        default: '1'
        type: choice
        options: [ '1','2','3' ]

permissions:
  contents: write

env:
  SHARD_COUNT: 2

jobs:
  tests:
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        shard: [ 0, 1 ]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest-shard

      - name: Install Playwright Browsers
        run: python -m playwright install --with-deps

      - name: Set env from workflow_dispatch inputs
        if: github.event_name == 'workflow_dispatch'
        run: |
          echo "SUITE=${{ github.event.inputs.suite }}" >> $GITHUB_ENV
          echo "ENVIRONMENT=${{ github.event.inputs.environment }}" >> $GITHUB_ENV
          echo "BROWSER=${{ github.event.inputs.browser }}" >> $GITHUB_ENV
          echo "DETAILED_TESTING=${{ github.event.inputs.detailed_testing }}" >> $GITHUB_ENV
          echo "COMPANY_ID=${{ github.event.inputs.company_id }}" >> $GITHUB_ENV
          echo "NUMBER_OF_COMPANIES=${{ github.event.inputs.number_of_companies }}" >> $GITHUB_ENV
          echo "USER_TYPE=${{ github.event.inputs.user_type }}" >> $GITHUB_ENV
          echo "UI_PAGES=${{ github.event.inputs.ui_pages }}" >> $GITHUB_ENV
          echo "API_PAGES=${{ github.event.inputs.api_pages }}" >> $GITHUB_ENV

      - name: Clean old Allure results
        run: rm -rf features/reports/allure-results/*

      - name: Run Test Collection
        run: |
          echo "Suite: $SUITE"
          python -m pytest --collect-only -m "$SUITE"
        continue-on-error: true

      - name: Run Pytest Shard
        run: |
          pytest -m "$SUITE and not no_shard"
          if [ "$SUITE" = "regression" ] && [ "${{ matrix.shard }}" = "0" ]; then
            pytest -m "no_shard"
          fi
